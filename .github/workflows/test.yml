name: Run Test

on:
  push:
    branches:
      - none #temp until I can get docker compose to talk on GitHub actions
env:
  JWT_SECRET: 0123456789
  ENV: dev
  TINDOORI_USE_LOCAL: true
  POSTGRES_DB: tindoori-local
  POSTGRES_HOST: localhost
  POSTGRES_PORT: 5432
  POSTGRES_USER: app-local
  POSTGRES_PASSWORD: e0*Hpwy^2N73
  IMAGES_BUCKET: tindoori-images-local
  MONGO_HOST_API: localhost
  MONGO_PORT: 27017
  MONGO_HOST: mongodb
  MONGO_DB: tindoori-local
  MIGRATE_MONGO_USER: migrate-mongo-local
  MIGRATE_MONGO_PASS: a9L^36_wK7
  MONGO_APP_USER: mongo-app-local
  MONGO_APP_PASS: Jp7^uX38!s

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: latest
          cache: "npm"
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Docker Network
        run: docker network create app-network
      - name: Checkout Mongo
        uses: actions/checkout@v3
        with:
          repository: TindooriLabs/tindoori-mongo
          ref: main
          ssh-key: ${{ secrets.TINDOORI_MONGO_DEPLOY_KEY }}
          path: mongo
      - name: Run Mongo
        run: |
          cd mongo
          sh start.sh -d
      - name: Checkout Postgres Flyway
        uses: actions/checkout@v3
        with:
          repository: TindooriLabs/tindoori-postgresql-flyway
          ref: main
          ssh-key: ${{ secrets.TINDOORI_POSTGRES_DEPLOY_KEY }}
          path: postgres
      - name: Run Postgres
        run: |
          cd postgres
          sh start.sh
      - name: Install Deps (use legacy peer deps due to NPM bug with multer)
        run: npm install --legacy-peer-deps
      - name: Install Jest
        run: npm install -g jest
      - name: Run Test
        run: npm run ci-test
